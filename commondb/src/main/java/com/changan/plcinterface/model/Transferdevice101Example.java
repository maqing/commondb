package com.changan.plcinterface.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class Transferdevice101Example {
    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table transferdevice101
     *
     * @abatorgenerated Sat Mar 05 19:18:56 CST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table transferdevice101
     *
     * @abatorgenerated Sat Mar 05 19:18:56 CST 2016
     */
    protected List oredCriteria;

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table transferdevice101
     *
     * @abatorgenerated Sat Mar 05 19:18:56 CST 2016
     */
    public Transferdevice101Example() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table transferdevice101
     *
     * @abatorgenerated Sat Mar 05 19:18:56 CST 2016
     */
    protected Transferdevice101Example(Transferdevice101Example example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table transferdevice101
     *
     * @abatorgenerated Sat Mar 05 19:18:56 CST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table transferdevice101
     *
     * @abatorgenerated Sat Mar 05 19:18:56 CST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table transferdevice101
     *
     * @abatorgenerated Sat Mar 05 19:18:56 CST 2016
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table transferdevice101
     *
     * @abatorgenerated Sat Mar 05 19:18:56 CST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table transferdevice101
     *
     * @abatorgenerated Sat Mar 05 19:18:56 CST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table transferdevice101
     *
     * @abatorgenerated Sat Mar 05 19:18:56 CST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table transferdevice101
     *
     * @abatorgenerated Sat Mar 05 19:18:56 CST 2016
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Abator for iBATIS.
     * This class corresponds to the database table transferdevice101
     *
     * @abatorgenerated Sat Mar 05 19:18:56 CST 2016
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andPlctimeIsNull() {
            addCriterion("PLCtime is null");
            return this;
        }

        public Criteria andPlctimeIsNotNull() {
            addCriterion("PLCtime is not null");
            return this;
        }

        public Criteria andPlctimeEqualTo(Date value) {
            addCriterion("PLCtime =", value, "plctime");
            return this;
        }

        public Criteria andPlctimeNotEqualTo(Date value) {
            addCriterion("PLCtime <>", value, "plctime");
            return this;
        }

        public Criteria andPlctimeGreaterThan(Date value) {
            addCriterion("PLCtime >", value, "plctime");
            return this;
        }

        public Criteria andPlctimeGreaterThanOrEqualTo(Date value) {
            addCriterion("PLCtime >=", value, "plctime");
            return this;
        }

        public Criteria andPlctimeLessThan(Date value) {
            addCriterion("PLCtime <", value, "plctime");
            return this;
        }

        public Criteria andPlctimeLessThanOrEqualTo(Date value) {
            addCriterion("PLCtime <=", value, "plctime");
            return this;
        }

        public Criteria andPlctimeIn(List values) {
            addCriterion("PLCtime in", values, "plctime");
            return this;
        }

        public Criteria andPlctimeNotIn(List values) {
            addCriterion("PLCtime not in", values, "plctime");
            return this;
        }

        public Criteria andPlctimeBetween(Date value1, Date value2) {
            addCriterion("PLCtime between", value1, value2, "plctime");
            return this;
        }

        public Criteria andPlctimeNotBetween(Date value1, Date value2) {
            addCriterion("PLCtime not between", value1, value2, "plctime");
            return this;
        }

        public Criteria andDeviceidIsNull() {
            addCriterion("Deviceid is null");
            return this;
        }

        public Criteria andDeviceidIsNotNull() {
            addCriterion("Deviceid is not null");
            return this;
        }

        public Criteria andDeviceidEqualTo(Integer value) {
            addCriterion("Deviceid =", value, "deviceid");
            return this;
        }

        public Criteria andDeviceidNotEqualTo(Integer value) {
            addCriterion("Deviceid <>", value, "deviceid");
            return this;
        }

        public Criteria andDeviceidGreaterThan(Integer value) {
            addCriterion("Deviceid >", value, "deviceid");
            return this;
        }

        public Criteria andDeviceidGreaterThanOrEqualTo(Integer value) {
            addCriterion("Deviceid >=", value, "deviceid");
            return this;
        }

        public Criteria andDeviceidLessThan(Integer value) {
            addCriterion("Deviceid <", value, "deviceid");
            return this;
        }

        public Criteria andDeviceidLessThanOrEqualTo(Integer value) {
            addCriterion("Deviceid <=", value, "deviceid");
            return this;
        }

        public Criteria andDeviceidIn(List values) {
            addCriterion("Deviceid in", values, "deviceid");
            return this;
        }

        public Criteria andDeviceidNotIn(List values) {
            addCriterion("Deviceid not in", values, "deviceid");
            return this;
        }

        public Criteria andDeviceidBetween(Integer value1, Integer value2) {
            addCriterion("Deviceid between", value1, value2, "deviceid");
            return this;
        }

        public Criteria andDeviceidNotBetween(Integer value1, Integer value2) {
            addCriterion("Deviceid not between", value1, value2, "deviceid");
            return this;
        }

        public Criteria andDevicenameIsNull() {
            addCriterion("Devicename is null");
            return this;
        }

        public Criteria andDevicenameIsNotNull() {
            addCriterion("Devicename is not null");
            return this;
        }

        public Criteria andDevicenameEqualTo(String value) {
            addCriterion("Devicename =", value, "devicename");
            return this;
        }

        public Criteria andDevicenameNotEqualTo(String value) {
            addCriterion("Devicename <>", value, "devicename");
            return this;
        }

        public Criteria andDevicenameGreaterThan(String value) {
            addCriterion("Devicename >", value, "devicename");
            return this;
        }

        public Criteria andDevicenameGreaterThanOrEqualTo(String value) {
            addCriterion("Devicename >=", value, "devicename");
            return this;
        }

        public Criteria andDevicenameLessThan(String value) {
            addCriterion("Devicename <", value, "devicename");
            return this;
        }

        public Criteria andDevicenameLessThanOrEqualTo(String value) {
            addCriterion("Devicename <=", value, "devicename");
            return this;
        }

        public Criteria andDevicenameLike(String value) {
            addCriterion("Devicename like", value, "devicename");
            return this;
        }

        public Criteria andDevicenameNotLike(String value) {
            addCriterion("Devicename not like", value, "devicename");
            return this;
        }

        public Criteria andDevicenameIn(List values) {
            addCriterion("Devicename in", values, "devicename");
            return this;
        }

        public Criteria andDevicenameNotIn(List values) {
            addCriterion("Devicename not in", values, "devicename");
            return this;
        }

        public Criteria andDevicenameBetween(String value1, String value2) {
            addCriterion("Devicename between", value1, value2, "devicename");
            return this;
        }

        public Criteria andDevicenameNotBetween(String value1, String value2) {
            addCriterion("Devicename not between", value1, value2, "devicename");
            return this;
        }

        public Criteria andDevicestatusIsNull() {
            addCriterion("Devicestatus is null");
            return this;
        }

        public Criteria andDevicestatusIsNotNull() {
            addCriterion("Devicestatus is not null");
            return this;
        }

        public Criteria andDevicestatusEqualTo(Long value) {
            addCriterion("Devicestatus =", value, "devicestatus");
            return this;
        }

        public Criteria andDevicestatusNotEqualTo(Long value) {
            addCriterion("Devicestatus <>", value, "devicestatus");
            return this;
        }

        public Criteria andDevicestatusGreaterThan(Long value) {
            addCriterion("Devicestatus >", value, "devicestatus");
            return this;
        }

        public Criteria andDevicestatusGreaterThanOrEqualTo(Long value) {
            addCriterion("Devicestatus >=", value, "devicestatus");
            return this;
        }

        public Criteria andDevicestatusLessThan(Long value) {
            addCriterion("Devicestatus <", value, "devicestatus");
            return this;
        }

        public Criteria andDevicestatusLessThanOrEqualTo(Long value) {
            addCriterion("Devicestatus <=", value, "devicestatus");
            return this;
        }

        public Criteria andDevicestatusIn(List values) {
            addCriterion("Devicestatus in", values, "devicestatus");
            return this;
        }

        public Criteria andDevicestatusNotIn(List values) {
            addCriterion("Devicestatus not in", values, "devicestatus");
            return this;
        }

        public Criteria andDevicestatusBetween(Long value1, Long value2) {
            addCriterion("Devicestatus between", value1, value2, "devicestatus");
            return this;
        }

        public Criteria andDevicestatusNotBetween(Long value1, Long value2) {
            addCriterion("Devicestatus not between", value1, value2, "devicestatus");
            return this;
        }

        public Criteria andFaultcodeIsNull() {
            addCriterion("Faultcode is null");
            return this;
        }

        public Criteria andFaultcodeIsNotNull() {
            addCriterion("Faultcode is not null");
            return this;
        }

        public Criteria andFaultcodeEqualTo(Long value) {
            addCriterion("Faultcode =", value, "faultcode");
            return this;
        }

        public Criteria andFaultcodeNotEqualTo(Long value) {
            addCriterion("Faultcode <>", value, "faultcode");
            return this;
        }

        public Criteria andFaultcodeGreaterThan(Long value) {
            addCriterion("Faultcode >", value, "faultcode");
            return this;
        }

        public Criteria andFaultcodeGreaterThanOrEqualTo(Long value) {
            addCriterion("Faultcode >=", value, "faultcode");
            return this;
        }

        public Criteria andFaultcodeLessThan(Long value) {
            addCriterion("Faultcode <", value, "faultcode");
            return this;
        }

        public Criteria andFaultcodeLessThanOrEqualTo(Long value) {
            addCriterion("Faultcode <=", value, "faultcode");
            return this;
        }

        public Criteria andFaultcodeIn(List values) {
            addCriterion("Faultcode in", values, "faultcode");
            return this;
        }

        public Criteria andFaultcodeNotIn(List values) {
            addCriterion("Faultcode not in", values, "faultcode");
            return this;
        }

        public Criteria andFaultcodeBetween(Long value1, Long value2) {
            addCriterion("Faultcode between", value1, value2, "faultcode");
            return this;
        }

        public Criteria andFaultcodeNotBetween(Long value1, Long value2) {
            addCriterion("Faultcode not between", value1, value2, "faultcode");
            return this;
        }

        public Criteria andProcesscodeIsNull() {
            addCriterion("Processcode is null");
            return this;
        }

        public Criteria andProcesscodeIsNotNull() {
            addCriterion("Processcode is not null");
            return this;
        }

        public Criteria andProcesscodeEqualTo(Integer value) {
            addCriterion("Processcode =", value, "processcode");
            return this;
        }

        public Criteria andProcesscodeNotEqualTo(Integer value) {
            addCriterion("Processcode <>", value, "processcode");
            return this;
        }

        public Criteria andProcesscodeGreaterThan(Integer value) {
            addCriterion("Processcode >", value, "processcode");
            return this;
        }

        public Criteria andProcesscodeGreaterThanOrEqualTo(Integer value) {
            addCriterion("Processcode >=", value, "processcode");
            return this;
        }

        public Criteria andProcesscodeLessThan(Integer value) {
            addCriterion("Processcode <", value, "processcode");
            return this;
        }

        public Criteria andProcesscodeLessThanOrEqualTo(Integer value) {
            addCriterion("Processcode <=", value, "processcode");
            return this;
        }

        public Criteria andProcesscodeIn(List values) {
            addCriterion("Processcode in", values, "processcode");
            return this;
        }

        public Criteria andProcesscodeNotIn(List values) {
            addCriterion("Processcode not in", values, "processcode");
            return this;
        }

        public Criteria andProcesscodeBetween(Integer value1, Integer value2) {
            addCriterion("Processcode between", value1, value2, "processcode");
            return this;
        }

        public Criteria andProcesscodeNotBetween(Integer value1, Integer value2) {
            addCriterion("Processcode not between", value1, value2, "processcode");
            return this;
        }

        public Criteria andWprecordvalueIsNull() {
            addCriterion("Wprecordvalue is null");
            return this;
        }

        public Criteria andWprecordvalueIsNotNull() {
            addCriterion("Wprecordvalue is not null");
            return this;
        }

        public Criteria andWprecordvalueEqualTo(Long value) {
            addCriterion("Wprecordvalue =", value, "wprecordvalue");
            return this;
        }

        public Criteria andWprecordvalueNotEqualTo(Long value) {
            addCriterion("Wprecordvalue <>", value, "wprecordvalue");
            return this;
        }

        public Criteria andWprecordvalueGreaterThan(Long value) {
            addCriterion("Wprecordvalue >", value, "wprecordvalue");
            return this;
        }

        public Criteria andWprecordvalueGreaterThanOrEqualTo(Long value) {
            addCriterion("Wprecordvalue >=", value, "wprecordvalue");
            return this;
        }

        public Criteria andWprecordvalueLessThan(Long value) {
            addCriterion("Wprecordvalue <", value, "wprecordvalue");
            return this;
        }

        public Criteria andWprecordvalueLessThanOrEqualTo(Long value) {
            addCriterion("Wprecordvalue <=", value, "wprecordvalue");
            return this;
        }

        public Criteria andWprecordvalueIn(List values) {
            addCriterion("Wprecordvalue in", values, "wprecordvalue");
            return this;
        }

        public Criteria andWprecordvalueNotIn(List values) {
            addCriterion("Wprecordvalue not in", values, "wprecordvalue");
            return this;
        }

        public Criteria andWprecordvalueBetween(Long value1, Long value2) {
            addCriterion("Wprecordvalue between", value1, value2, "wprecordvalue");
            return this;
        }

        public Criteria andWprecordvalueNotBetween(Long value1, Long value2) {
            addCriterion("Wprecordvalue not between", value1, value2, "wprecordvalue");
            return this;
        }
    }
}